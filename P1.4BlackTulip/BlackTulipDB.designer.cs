#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace P1._4BlackTulip
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BlackTulipDB")]
	public partial class BlackTulipDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbestelling(bestelling instance);
    partial void Updatebestelling(bestelling instance);
    partial void Deletebestelling(bestelling instance);
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void Insertklant(klant instance);
    partial void Updateklant(klant instance);
    partial void Deleteklant(klant instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertproducttype(producttype instance);
    partial void Updateproducttype(producttype instance);
    partial void Deleteproducttype(producttype instance);
    #endregion
		
		public BlackTulipDBDataContext() : 
				base(global::P1._4BlackTulip.Properties.Settings.Default.BlackTulipDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BlackTulipDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlackTulipDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlackTulipDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlackTulipDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bestelling> bestellings
		{
			get
			{
				return this.GetTable<bestelling>();
			}
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<klant> klants
		{
			get
			{
				return this.GetTable<klant>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<producttype> producttypes
		{
			get
			{
				return this.GetTable<producttype>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bestelling")]
	public partial class bestelling : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bid;
		
		private string _datum;
		
		private int _kid;
		
		private EntitySet<item> _items;
		
		private EntityRef<klant> _klant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbidChanging(int value);
    partial void OnbidChanged();
    partial void OndatumChanging(string value);
    partial void OndatumChanged();
    partial void OnkidChanging(int value);
    partial void OnkidChanged();
    #endregion
		
		public bestelling()
		{
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			this._klant = default(EntityRef<klant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bid
		{
			get
			{
				return this._bid;
			}
			set
			{
				if ((this._bid != value))
				{
					this.OnbidChanging(value);
					this.SendPropertyChanging();
					this._bid = value;
					this.SendPropertyChanged("bid");
					this.OnbidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datum", DbType="VarChar(50)")]
		public string datum
		{
			get
			{
				return this._datum;
			}
			set
			{
				if ((this._datum != value))
				{
					this.OndatumChanging(value);
					this.SendPropertyChanging();
					this._datum = value;
					this.SendPropertyChanged("datum");
					this.OndatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kid", DbType="Int NOT NULL")]
		public int kid
		{
			get
			{
				return this._kid;
			}
			set
			{
				if ((this._kid != value))
				{
					if (this._klant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkidChanging(value);
					this.SendPropertyChanging();
					this._kid = value;
					this.SendPropertyChanged("kid");
					this.OnkidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bestelling_item", Storage="_items", ThisKey="bid", OtherKey="bid")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="klant_bestelling", Storage="_klant", ThisKey="kid", OtherKey="kid", IsForeignKey=true)]
		public klant klant
		{
			get
			{
				return this._klant.Entity;
			}
			set
			{
				klant previousValue = this._klant.Entity;
				if (((previousValue != value) 
							|| (this._klant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._klant.Entity = null;
						previousValue.bestellings.Remove(this);
					}
					this._klant.Entity = value;
					if ((value != null))
					{
						value.bestellings.Add(this);
						this._kid = value.kid;
					}
					else
					{
						this._kid = default(int);
					}
					this.SendPropertyChanged("klant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.bestelling = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.bestelling = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _oid;
		
		private string _hoeveelheid;
		
		private int _bid;
		
		private int _pid;
		
		private EntitySet<product> _products;
		
		private EntityRef<bestelling> _bestelling;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnoidChanging(int value);
    partial void OnoidChanged();
    partial void OnhoeveelheidChanging(string value);
    partial void OnhoeveelheidChanged();
    partial void OnbidChanging(int value);
    partial void OnbidChanged();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    #endregion
		
		public item()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._bestelling = default(EntityRef<bestelling>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int oid
		{
			get
			{
				return this._oid;
			}
			set
			{
				if ((this._oid != value))
				{
					this.OnoidChanging(value);
					this.SendPropertyChanging();
					this._oid = value;
					this.SendPropertyChanged("oid");
					this.OnoidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoeveelheid", DbType="VarChar(50)")]
		public string hoeveelheid
		{
			get
			{
				return this._hoeveelheid;
			}
			set
			{
				if ((this._hoeveelheid != value))
				{
					this.OnhoeveelheidChanging(value);
					this.SendPropertyChanging();
					this._hoeveelheid = value;
					this.SendPropertyChanged("hoeveelheid");
					this.OnhoeveelheidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid", DbType="Int NOT NULL")]
		public int bid
		{
			get
			{
				return this._bid;
			}
			set
			{
				if ((this._bid != value))
				{
					if (this._bestelling.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbidChanging(value);
					this.SendPropertyChanging();
					this._bid = value;
					this.SendPropertyChanged("bid");
					this.OnbidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int NOT NULL")]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_product", Storage="_products", ThisKey="pid", OtherKey="pid")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bestelling_item", Storage="_bestelling", ThisKey="bid", OtherKey="bid", IsForeignKey=true)]
		public bestelling bestelling
		{
			get
			{
				return this._bestelling.Entity;
			}
			set
			{
				bestelling previousValue = this._bestelling.Entity;
				if (((previousValue != value) 
							|| (this._bestelling.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bestelling.Entity = null;
						previousValue.items.Remove(this);
					}
					this._bestelling.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._bid = value.bid;
					}
					else
					{
						this._bid = default(int);
					}
					this.SendPropertyChanged("bestelling");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_item", Storage="_product", ThisKey="pid", OtherKey="pid", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.items.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._pid = value.pid;
					}
					else
					{
						this._pid = default(int);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.klant")]
	public partial class klant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _kid;
		
		private string _naam;
		
		private string _stad;
		
		private string _mobielenummer;
		
		private string _e_mail;
		
		private EntitySet<bestelling> _bestellings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnkidChanging(int value);
    partial void OnkidChanged();
    partial void OnnaamChanging(string value);
    partial void OnnaamChanged();
    partial void OnstadChanging(string value);
    partial void OnstadChanged();
    partial void OnmobielenummerChanging(string value);
    partial void OnmobielenummerChanged();
    partial void One_mailChanging(string value);
    partial void One_mailChanged();
    #endregion
		
		public klant()
		{
			this._bestellings = new EntitySet<bestelling>(new Action<bestelling>(this.attach_bestellings), new Action<bestelling>(this.detach_bestellings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int kid
		{
			get
			{
				return this._kid;
			}
			set
			{
				if ((this._kid != value))
				{
					this.OnkidChanging(value);
					this.SendPropertyChanging();
					this._kid = value;
					this.SendPropertyChanged("kid");
					this.OnkidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naam", DbType="VarChar(50)")]
		public string naam
		{
			get
			{
				return this._naam;
			}
			set
			{
				if ((this._naam != value))
				{
					this.OnnaamChanging(value);
					this.SendPropertyChanging();
					this._naam = value;
					this.SendPropertyChanged("naam");
					this.OnnaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stad", DbType="VarChar(50)")]
		public string stad
		{
			get
			{
				return this._stad;
			}
			set
			{
				if ((this._stad != value))
				{
					this.OnstadChanging(value);
					this.SendPropertyChanging();
					this._stad = value;
					this.SendPropertyChanged("stad");
					this.OnstadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobielenummer", DbType="VarChar(50)")]
		public string mobielenummer
		{
			get
			{
				return this._mobielenummer;
			}
			set
			{
				if ((this._mobielenummer != value))
				{
					this.OnmobielenummerChanging(value);
					this.SendPropertyChanging();
					this._mobielenummer = value;
					this.SendPropertyChanged("mobielenummer");
					this.OnmobielenummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[e-mail]", Storage="_e_mail", DbType="VarChar(50)")]
		public string e_mail
		{
			get
			{
				return this._e_mail;
			}
			set
			{
				if ((this._e_mail != value))
				{
					this.One_mailChanging(value);
					this.SendPropertyChanging();
					this._e_mail = value;
					this.SendPropertyChanged("e_mail");
					this.One_mailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="klant_bestelling", Storage="_bestellings", ThisKey="kid", OtherKey="kid")]
		public EntitySet<bestelling> bestellings
		{
			get
			{
				return this._bestellings;
			}
			set
			{
				this._bestellings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bestellings(bestelling entity)
		{
			this.SendPropertyChanging();
			entity.klant = this;
		}
		
		private void detach_bestellings(bestelling entity)
		{
			this.SendPropertyChanging();
			entity.klant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pid;
		
		private string _product_naam;
		
		private int _ptid;
		
		private string _prijs;
		
		private string _afbeelding;
		
		private EntitySet<item> _items;
		
		private EntityRef<item> _item;
		
		private EntityRef<producttype> _producttype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void Onproduct_naamChanging(string value);
    partial void Onproduct_naamChanged();
    partial void OnptidChanging(int value);
    partial void OnptidChanged();
    partial void OnprijsChanging(string value);
    partial void OnprijsChanged();
    partial void OnafbeeldingChanging(string value);
    partial void OnafbeeldingChanged();
    #endregion
		
		public product()
		{
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			this._item = default(EntityRef<item>);
			this._producttype = default(EntityRef<producttype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_naam", DbType="VarChar(50)")]
		public string product_naam
		{
			get
			{
				return this._product_naam;
			}
			set
			{
				if ((this._product_naam != value))
				{
					this.Onproduct_naamChanging(value);
					this.SendPropertyChanging();
					this._product_naam = value;
					this.SendPropertyChanged("product_naam");
					this.Onproduct_naamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ptid", DbType="Int NOT NULL")]
		public int ptid
		{
			get
			{
				return this._ptid;
			}
			set
			{
				if ((this._ptid != value))
				{
					if (this._producttype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnptidChanging(value);
					this.SendPropertyChanging();
					this._ptid = value;
					this.SendPropertyChanged("ptid");
					this.OnptidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prijs", DbType="VarChar(50)")]
		public string prijs
		{
			get
			{
				return this._prijs;
			}
			set
			{
				if ((this._prijs != value))
				{
					this.OnprijsChanging(value);
					this.SendPropertyChanging();
					this._prijs = value;
					this.SendPropertyChanged("prijs");
					this.OnprijsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_afbeelding", DbType="VarChar(50)")]
		public string afbeelding
		{
			get
			{
				return this._afbeelding;
			}
			set
			{
				if ((this._afbeelding != value))
				{
					this.OnafbeeldingChanging(value);
					this.SendPropertyChanging();
					this._afbeelding = value;
					this.SendPropertyChanged("afbeelding");
					this.OnafbeeldingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_item", Storage="_items", ThisKey="pid", OtherKey="pid")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_product", Storage="_item", ThisKey="pid", OtherKey="pid", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.products.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._pid = value.pid;
					}
					else
					{
						this._pid = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="producttype_product", Storage="_producttype", ThisKey="ptid", OtherKey="ptid", IsForeignKey=true)]
		public producttype producttype
		{
			get
			{
				return this._producttype.Entity;
			}
			set
			{
				producttype previousValue = this._producttype.Entity;
				if (((previousValue != value) 
							|| (this._producttype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._producttype.Entity = null;
						previousValue.products.Remove(this);
					}
					this._producttype.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._ptid = value.ptid;
					}
					else
					{
						this._ptid = default(int);
					}
					this.SendPropertyChanged("producttype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.producttype")]
	public partial class producttype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ptid;
		
		private string _omschrijving;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnptidChanging(int value);
    partial void OnptidChanged();
    partial void OnomschrijvingChanging(string value);
    partial void OnomschrijvingChanged();
    #endregion
		
		public producttype()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ptid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ptid
		{
			get
			{
				return this._ptid;
			}
			set
			{
				if ((this._ptid != value))
				{
					this.OnptidChanging(value);
					this.SendPropertyChanging();
					this._ptid = value;
					this.SendPropertyChanged("ptid");
					this.OnptidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_omschrijving", DbType="VarChar(50)")]
		public string omschrijving
		{
			get
			{
				return this._omschrijving;
			}
			set
			{
				if ((this._omschrijving != value))
				{
					this.OnomschrijvingChanging(value);
					this.SendPropertyChanging();
					this._omschrijving = value;
					this.SendPropertyChanged("omschrijving");
					this.OnomschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="producttype_product", Storage="_products", ThisKey="ptid", OtherKey="ptid")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.producttype = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.producttype = null;
		}
	}
}
#pragma warning restore 1591
